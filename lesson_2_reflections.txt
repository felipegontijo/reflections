What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, the folder is now a git-compatible repository, and the features of the git version control system are available.
	You need to do it so that you can use the git features, like commits, and be able to track your work and its progress.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is a completely separate space in which files you intend to commit are placed into. It acts as a middle-man and is helpful to set aside and organize the files together prior to committing them.

How can you use the staging area to make sure you have one commit per logical change?

	The staging area holds what is going to be committed, and so is a good resource to identify the files that will be committed as well as the changes that will be made if I run git diff --staged.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Branches are useful when we want to experiment with adding a new feature, or create a different "instance" of the project which behaves differently.
	Branches help because they make it easy for us to know where each instance of our project is and where we need to go to to find something. It also enhances the adding/removing functionality process, and makes debugging easy and more straigth-forward. Branches also make it visual to see what each part of our project does and where it is.

How do the diagrams help you visualize the branch structure?

	Diagrams are good because they provide a "picture" of the commit history, making it easier to identify branches and how they relate with each other and with master.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Merging two branches together causes the two branches to become one, making all previous commits from the two branches accessible within the now single branch. It is represented that way to illustrate what it means to merge - to join two branches into one. It is as if their paths were to be joined together.